@model Enquete.Test.MVC.Models.EnqueteTeste

@{
    ViewData["Title"] = "Create";
}

<h1>Criar nova Enquete</h1>

<h4>EnqueteTeste</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Titulo" class="control-label"></label>
                <input asp-for="Titulo" class="form-control" />
                <span asp-validation-for="Titulo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Descricao" class="control-label"></label>
                <input asp-for="Descricao" class="form-control" />
                <span asp-validation-for="Descricao" class="text-danger"></span>
            </div>

            <table id="OpcaoTable" class="table">
                <thead>
                    <tr>
                        <th>
                            Opcao
                        </th>

                        <th></th>

                    </tr>
                </thead>
                <tbody>
                    @*@foreach (var item in Model.Opcoes)*@
                    @for (int i = 0; i < Model.Opcoes.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.EditorFor(x => x.Opcoes[i].OpcaoDescricao, new { htmlAttributes = new { @class = "form-control"}})
                                @*<input asp-for="@item.OpcaoDescricao" class="form-control" />*@
                            </td>

                            <td>
                                <button id='btnadd-@i' type="button" class="btn btn-sm btn-primary visible" onclick="AddItem(this)">Adicionar</button>
                                <button id='btnremove-@i' type="button" class="btn btn-sm btn-danger invisible" onclick="DeleteItem(this)">Deletar</button>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>

            <input type="hidden" id="hdnLastIndex" value="0" />

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">

     function DeleteItem(btn)
     {
         $(btn).closest('tr').remove();
     }

     function AddItem(btn) {

        var table = document.getElementById('OpcaoTable');
        var rows = table.getElementsByTagName('tr');

        var rowOuterHtml = rows[rows.length - 1].outerHTML;

        var lastrowIdx = document.getElementById('hdnLastIndex').value;
        var nextrowIdx = eval(lastrowIdx) + 1;
        document.getElementById('hdnLastIndex').value = nextrowIdx;

        rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');
        rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');
        rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowIdx, '-' + nextrowIdx);

        var newRow = table.insertRow();
        newRow.innerHTML = rowOuterHtml;

        var btnAddID = btn.id;
        var btnDeleteid = btnAddID.replaceAll('btnadd', 'btnremove');

        var delbtn = document.getElementById(btnDeleteid);
        delbtn.classList.add("visible");
        delbtn.classList.remove("invisible");

        var addbtn = document.getElementById(btnAddID);
        addbtn.classList.remove("visible");
        addbtn.classList.add("invisible");

    }   

    </script>

}
